
<div class="flex gap-10 justify-between">
  <div class="w-full">
    <div class="w-full px-10">
      {% for media in product.media %}
        <div class="w-full h-96">
          {% render 'product-media',media:media %}
        </div>
      {% endfor %}
    </div>
  </div>

  <div class=" flex flex-col gap-4 w-2/3 px-4 my-10"> 
    <div class="">    
      <span class="text-xs text-gray-500"> {{ product.vendor }} </span>
      <h1 class="text-xl font-bold ">{{ product.title }}</h1>
      <div class="flex gap-2 items-center">
        <!--the product price-->
        <p class="font-medium text-lg"> {{ product.price | money  }}</p>
        {% if product.price < product.compare_at_price %}
          <p class="line-through font-light text-gray-500">{{ product.compare_at_price |  money }}</p>
          <span class="bg-red-700 text-white text-xs shadow-lg px-2 py-1 rounded-lg ">SALE ðŸ”¥</span>
        {% endif %}
      </div>
      <div class="text-sm font-light my-4">
        <p>{{ product.description }}</p>
      </div>
    </div>

     <div class="my-3">
        {% unless product.has_only_default_variant %}
            <variant-selector data-url="{{ product.url }}" data-section="{{ section.id }}">
                {% for option in product.options_with_values %}
                    <label for="Option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>

                    <div class="my-2">
                        <select 
                            name="options[{{ option.name | escape }}]" 
                            id="Option-{{ section.id }}-{{ forloop.index0 }}" 
                            class="w-full border py-3 px-3"
                        >
                            {% for value in option.values %}
                                <option 
                                    value="{{ value | escape }}"
                                    {% if option.selected_value == value %}
                                        selected="selected"
                                    {% endif %}
                                >
                                    {{ value }}
                                </option>
                            {% endfor %}
                        </select>
                    </div>

                    <script type="application/json">
                        {{ product.variants | json }}
                    </script>

                {% endfor %}
            </variant-selector>
        {% endunless %}
     </div>
    <div class="my-3">
      <label for="Quantity-{{ section.id }}"> Quantity </label>
      <div class="my-2">
        <input class="w-full py-2 border px-2 outline-none" type="number" name="Quantity" id="Quantity-{{ section.id }}" value="1" min="1" >
      </div>
    </div>
    <script>
      class VariantSelector extends HTMLElement {
          constructor() {
              super();
              this.addEventListener("change", this.onVariantChange);
          }

          onVariantChange() {
              this.getSelectedOptions();
              this.getSelectedVariant();

              if(this.currentVariant) {
                  this.updateURL();
                  this.updateFormID();
                  this.updatePrice();
              }
          }

          getSelectedOptions() {
              this.options = Array.from(this.querySelectorAll('select'), (select) => select.value);
              console.log(this.options);
          }

          getVariantJSON() {
              this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent);
              return this.variantData;
          }

          getSelectedVariant() {
              this.currentVariant = this.getVariantJSON().find(
                  (variant) => {
                      const findings = !variant.options.map(
                          (option, index) => {
                              return this.options[index] === option;
                          }
                      ).includes(false);

                      if(findings) return variant;
                  }
              );

              console.log(this.currentVariant);
          }

          updateURL() {
              if(!this.currentVariant) return;
              window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`);
          }

          updateFormID() {
              const form_input = document.querySelector("#product-form").querySelector('input[name="id"]');
              form_input.value = this.currentVariant.id;
          }

          updatePrice() {
              fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
              .then((response) => response.text())
              .then((responseText) => {
                  const id = `price-${this.dataset.section}`;
                  const html = new DOMParser().parseFromString(responseText, 'text/html');
                  console.log(html);
                  

                  const oldPrice = document.getElementById(id);
                  const newPrice = html.getElementById(id);

                  if(oldPrice && newPrice) oldPrice.innerHTML = newPrice.innerHTML;
              });
          }
      }

      customElements.define("variant-selector", VariantSelector);
  </script>

    <div>
      {% if product.selected_or_first_available_variant.available %}
        <button 
        {% if product.selected_or_first_available_variant.available == false %}
          disabled
        {% endif %}
         class="bg-black text-white w-full py-4 cursor-pointer">
          Add to cart 
        </button>
      {% else %}          
        <button disabled class="bg-black/65 text-white w-full py-4 uppercase ">
          sold out 
        </button>
      {% endif %}
      
    </div>
    
  </div>
</div>